>>>> [1] add1 <<<<
Executing command 'blank' ...
Executing command 'add' ...
Executing command 'save' ...
>>>> [2] add2 <<<<
Executing command 'blank' ...
Executing command 'add' ...
Executing command 'add' ...
Executing command 'add' ...
Executing command 'add' ...
Executing command 'save' ...
>>>> [3] add3 <<<<
Executing command 'blank' ...
Executing command 'add' ...
Executing command 'add' ...
Executing command 'add' ...
Executing command 'add' ...
Executing command 'save' ...
>>>> [4] add4 <<<<
Executing command 'open' ...
Executing command 'add' ...
Executing command 'add' ...
Executing command 'add' ...
Executing command 'save' ...
>>>> [5] add5 <<<<
Executing command 'blank' ...
Executing command 'add' ...
Executing command 'add' ...
Executing command 'add' ...
Executing command 'save' ...
>>>> [6] basic_blank1 <<<<
Executing command 'blank' ...
Executing command 'save' ...
>>>> [7] basic_blank2 <<<<
Executing command 'blank' ...
Executing command 'save' ...
>>>> [8] basic_blank3 <<<<
Executing command 'blank' ...
Executing command 'blank' ...
Executing command 'save' ...
>>>> [9] basic_open1 <<<<
Executing command 'open' ...
Executing command 'save' ...
>>>> [10] basic_open2 <<<<
Executing command 'open' ...
Executing command 'open' ...
Executing command 'save' ...
>>>> [11] crop1 <<<<
Executing command 'open' ...
Executing command 'crop' ...
Executing command 'save' ...
>>>> [12] crop2 <<<<
Executing command 'open' ...
Executing command 'crop' ...
Executing command 'save' ...
>>>> [13] crop3 <<<<
Executing command 'open' ...
Executing command 'crop' ...
Executing command 'crop' ...
Executing command 'save' ...
>>>> [14] crop4 <<<<
Executing command 'open' ...
Executing command 'crop' ...
Executing command 'save' ...
>>>> [15] crop5 <<<<
Executing command 'open' ...
Executing command 'crop' ...
Executing command 'crop' ...
Executing command 'save' ...
>>>> [16] crop6 <<<<
Executing command 'open' ...
Executing command 'crop' ...
Executing command 'crop' ...
Executing command 'crop' ...
Executing command 'save' ...
>>>> [17] extra1 <<<<
Executing command 'blank' ...
Executing command 'add' ...
Executing command 'add' ...
Executing command 'rotate_left' ...
Executing command 'rotate_right' ...
Executing command 'rotate_right' ...
Executing command 'rotate_right' ...
Executing command 'rotate_right' ...
Executing command 'rotate_right' ...
Executing command 'replace' ...
Executing command 'replace' ...
Executing command 'invert' ...
Executing command 'invert' ...
Executing command 'save' ...
>>>> [18] extra2 <<<<
Executing command 'blank' ...
Executing command 'add' ...
Executing command 'add' ...
Executing command 'h_mirror' ...
Executing command 'v_mirror' ...
Executing command 'rotate_left' ...
Executing command 'rotate_right' ...
Executing command 'rotate_right' ...
Executing command 'to_gray_scale' ...
Executing command 'rotate_right' ...
Executing command 'rotate_right' ...
Executing command 'rotate_right' ...
Executing command 'replace' ...
Executing command 'replace' ...
Executing command 'invert' ...
Executing command 'v_mirror' ...
Executing command 'h_mirror' ...
Executing command 'invert' ...
Executing command 'save' ...
>>>> [19] extra3 <<<<
Executing command 'open' ...
Executing command 'invert' ...
Executing command 'rotate_left' ...
Executing command 'h_mirror' ...
Executing command 'save' ...
Executing command 'open' ...
Executing command 'rotate_right' ...
Executing command 'v_mirror' ...
Executing command 'invert' ...
Executing command 'save' ...
Executing command 'blank' ...
Executing command 'add' ...
Executing command 'add' ...
Executing command 'add' ...
Executing command 'add' ...
Executing command 'save' ...
>>>> [20] extra4 <<<<
Executing command 'blank' ...
Executing command 'fill' ...
Executing command 'add' ...
Executing command 'fill' ...
Executing command 'add' ...
Executing command 'fill' ...
Executing command 'add' ...
Executing command 'save' ...
>>>> [21] fill1 <<<<
Executing command 'open' ...
Executing command 'fill' ...
Executing command 'save' ...
>>>> [22] fill2 <<<<
Executing command 'open' ...
Executing command 'fill' ...
Executing command 'fill' ...
Executing command 'fill' ...
Executing command 'save' ...
>>>> [23] fill3 <<<<
Executing command 'open' ...
Executing command 'fill' ...
Executing command 'save' ...
>>>> [24] fill4 <<<<
Executing command 'blank' ...
Executing command 'fill' ...
Executing command 'fill' ...
Executing command 'fill' ...
Executing command 'fill' ...
Executing command 'fill' ...
Executing command 'fill' ...
Executing command 'save' ...
>>>> [25] h_mirror1 <<<<
Executing command 'open' ...
Executing command 'h_mirror' ...
Executing command 'save' ...
>>>> [26] h_mirror2 <<<<
Executing command 'open' ...
Executing command 'h_mirror' ...
Executing command 'h_mirror' ...
Executing command 'save' ...
>>>> [27] h_mirror3 <<<<
Executing command 'open' ...
Executing command 'h_mirror' ...
Executing command 'save' ...
>>>> [28] h_mirror4 <<<<
Executing command 'open' ...
Executing command 'h_mirror' ...
Executing command 'save' ...
>>>> [29] invert1 <<<<
Executing command 'open' ...
Executing command 'invert' ...
Executing command 'save' ...
>>>> [30] invert2 <<<<
Executing command 'open' ...
Executing command 'invert' ...
Executing command 'invert' ...
Executing command 'save' ...
>>>> [31] invert3 <<<<
Executing command 'open' ...
Executing command 'invert' ...
Executing command 'save' ...
>>>> [32] invert4 <<<<
Executing command 'open' ...
Executing command 'invert' ...
Executing command 'save' ...
>>>> [33] median_filter1 <<<<
Executing command 'open' ...
Executing command 'median_filter' ...
Executing command 'save' ...
>>>> [34] median_filter2 <<<<
Executing command 'open' ...
Executing command 'median_filter' ...
Executing command 'save' ...
>>>> [35] median_filter3 <<<<
Executing command 'open' ...
Executing command 'median_filter' ...
Executing command 'median_filter' ...
Executing command 'save' ...
>>>> [36] median_filter4 <<<<
Executing command 'open' ...
Executing command 'median_filter' ...
Executing command 'median_filter' ...
Executing command 'save' ...
>>>> [37] median_filter5 <<<<
Executing command 'open' ...
Executing command 'median_filter' ...
Executing command 'median_filter' ...
Executing command 'median_filter' ...
Executing command 'median_filter' ...
Executing command 'save' ...
>>>> [38] replace1 <<<<
Executing command 'open' ...
Executing command 'replace' ...
Executing command 'save' ...
>>>> [39] replace2 <<<<
Executing command 'open' ...
Executing command 'replace' ...
Executing command 'save' ...
>>>> [40] replace3 <<<<
Executing command 'open' ...
Executing command 'replace' ...
Executing command 'replace' ...
Executing command 'save' ...
>>>> [41] rotate_left1 <<<<
Executing command 'open' ...
Executing command 'rotate_left' ...
Executing command 'save' ...
>>>> [42] rotate_left2 <<<<
Executing command 'open' ...
Executing command 'rotate_left' ...
Executing command 'rotate_left' ...
Executing command 'save' ...
>>>> [43] rotate_left3 <<<<
Executing command 'open' ...
Executing command 'rotate_left' ...
Executing command 'rotate_left' ...
Executing command 'rotate_left' ...
Executing command 'save' ...
>>>> [44] rotate_left_rotate_right1 <<<<
Executing command 'open' ...
Executing command 'rotate_left' ...
Executing command 'rotate_right' ...
Executing command 'save' ...
>>>> [45] rotate_left_rotate_right2 <<<<
Executing command 'open' ...
Executing command 'rotate_left' ...
Executing command 'rotate_right' ...
Executing command 'rotate_right' ...
Executing command 'save' ...
>>>> [46] rotate_right1 <<<<
Executing command 'open' ...
Executing command 'rotate_right' ...
Executing command 'save' ...
>>>> [47] rotate_right2 <<<<
Executing command 'open' ...
Executing command 'rotate_right' ...
Executing command 'rotate_right' ...
Executing command 'save' ...
>>>> [48] rotate_right3 <<<<
Executing command 'open' ...
Executing command 'rotate_right' ...
Executing command 'rotate_right' ...
Executing command 'save' ...
>>>> [49] to_gray_scale1 <<<<
Executing command 'open' ...
Executing command 'to_gray_scale' ...
Executing command 'save' ...
>>>> [50] to_gray_scale2 <<<<
Executing command 'open' ...
Executing command 'to_gray_scale' ...
Executing command 'to_gray_scale' ...
Executing command 'save' ...
>>>> [51] to_gray_scale3 <<<<
Executing command 'open' ...
Executing command 'to_gray_scale' ...
Executing command 'save' ...
>>>> [52] to_gray_scale4 <<<<
Executing command 'open' ...
Executing command 'to_gray_scale' ...
Executing command 'save' ...
>>>> [53] v_mirror1 <<<<
Executing command 'open' ...
Executing command 'v_mirror' ...
Executing command 'save' ...
>>>> [54] v_mirror2 <<<<
Executing command 'open' ...
Executing command 'v_mirror' ...
Executing command 'v_mirror' ...
Executing command 'save' ...
>>>> [55] v_mirror3 <<<<
Executing command 'open' ...
Executing command 'v_mirror' ...
Executing command 'save' ...
>>>> [56] v_mirror4 <<<<
Executing command 'open' ...
Executing command 'v_mirror' ...
Executing command 'save' ...
>>>> [57] xpm2_open1 <<<<
Executing command 'xpm2_open' ...
Executing command 'input/blarg.xpm' ...
Executing command 'save' ...
PNG.cpp:31:24: runtime error: member call on null pointer of type 'prog::Image'
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior PNG.cpp:31:24 in 
Image.cpp:28:14: runtime error: member call on null pointer of type 'const prog::Image *'
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior Image.cpp:28:14 in 
AddressSanitizer:DEADLYSIGNAL
=================================================================
==18894==ERROR: AddressSanitizer: SEGV on unknown address 0x00000000000c (pc 0x0001000b40a8 bp 0x00016fd697b0 sp 0x00016fd69770 T0)
==18894==The signal is caused by a UNKNOWN memory access.
==18894==Hint: address points to the zero page.
    #0 0x1000b40a8 in prog::Image::height() const Image.cpp:30
    #1 0x1000fc188 in prog::saveToPNG(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, prog::Image const*) PNG.cpp:31
    #2 0x1000bbbcc in prog::Script::save() Script.cpp:145
    #3 0x1000b7168 in prog::Script::run() Script.cpp:64
    #4 0x1000b184c in prog::TestDriver::test_script(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) test.cpp:43
    #5 0x1000a12e8 in prog::TestDriver::run_test(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) test.cpp:79
    #6 0x100098ba4 in prog::TestDriver::test_scripts(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) test.cpp:165
    #7 0x100096fdc in main test.cpp:186
    #8 0x19371be4c  (<unknown module>)

==18894==Register values:
 x[0] = 0x000000016fd69688   x[1] = 0x0000000000000000   x[2] = 0x0000000000000000   x[3] = 0x0000000101d003c0  
 x[4] = 0x0000000063000000   x[5] = 0x0000000000000000   x[6] = 0x0000000000000000   x[7] = 0x0000000000000000  
 x[8] = 0x0000000000000000   x[9] = 0x000000000000000c  x[10] = 0x0000000000092220  x[11] = 0x000000000000001d  
x[12] = 0x00000001002fc000  x[13] = 0xffffff0000000000  x[14] = 0x0000000000000000  x[15] = 0x0000000000000000  
x[16] = 0x0000000300e53400  x[17] = 0x000000010060c0a8  x[18] = 0x0000000000000000  x[19] = 0x000000016fd69800  
x[20] = 0x0000000100096af4  x[21] = 0x00000001001cdca0  x[22] = 0x000000016fd6b7d0  x[23] = 0x0000000193791000  
x[24] = 0x00000001ef6183c0  x[25] = 0x0000000000000000  x[26] = 0x0000000000000000  x[27] = 0x0000000000000000  
x[28] = 0x0000000000000000     fp = 0x000000016fd697b0     lr = 0x00000001000b4050     sp = 0x000000016fd69770  
AddressSanitizer can not provide additional info.
SUMMARY: AddressSanitizer: SEGV Image.cpp:30 in prog::Image::height() const
==18894==ABORTING
>>>> [58] xpm2_open2 <<<<
Executing command 'xpm2_open' ...
Executing command 'input/squares.xpm' ...
Executing command 'save' ...
PNG.cpp:31:24: runtime error: member call on null pointer of type 'prog::Image'
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior PNG.cpp:31:24 in 
Image.cpp:28:14: runtime error: member call on null pointer of type 'const prog::Image *'
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior Image.cpp:28:14 in 
AddressSanitizer:DEADLYSIGNAL
=================================================================
==18897==ERROR: AddressSanitizer: SEGV on unknown address 0x00000000000c (pc 0x0001000b40a8 bp 0x00016fd697b0 sp 0x00016fd69770 T0)
==18897==The signal is caused by a UNKNOWN memory access.
==18897==Hint: address points to the zero page.
    #0 0x1000b40a8 in prog::Image::height() const Image.cpp:30
    #1 0x1000fc188 in prog::saveToPNG(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, prog::Image const*) PNG.cpp:31
    #2 0x1000bbbcc in prog::Script::save() Script.cpp:145
    #3 0x1000b7168 in prog::Script::run() Script.cpp:64
    #4 0x1000b184c in prog::TestDriver::test_script(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) test.cpp:43
    #5 0x1000a12e8 in prog::TestDriver::run_test(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) test.cpp:79
    #6 0x100098ba4 in prog::TestDriver::test_scripts(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) test.cpp:165
    #7 0x100096fdc in main test.cpp:186
    #8 0x19371be4c  (<unknown module>)

==18897==Register values:
 x[0] = 0x000000016fd69688   x[1] = 0x0000000000000000   x[2] = 0x0000000000000000   x[3] = 0x0000000101d003c0  
 x[4] = 0x0000000063000000   x[5] = 0x0000000000000000   x[6] = 0x0000000000000000   x[7] = 0x0000000000000000  
 x[8] = 0x0000000000000000   x[9] = 0x000000000000000c  x[10] = 0x0000000000092220  x[11] = 0x000000000000001d  
x[12] = 0x00000001002fc000  x[13] = 0xffffff0000000000  x[14] = 0x0000000000000000  x[15] = 0x0000000000000000  
x[16] = 0x0000000300e53400  x[17] = 0x000000010060c0a8  x[18] = 0x0000000000000000  x[19] = 0x000000016fd69800  
x[20] = 0x0000000100096af4  x[21] = 0x00000001001cdca0  x[22] = 0x000000016fd6b7d0  x[23] = 0x0000000193791000  
x[24] = 0x00000001ef6183c0  x[25] = 0x0000000000000000  x[26] = 0x0000000000000000  x[27] = 0x0000000000000000  
x[28] = 0x0000000000000000     fp = 0x000000016fd697b0     lr = 0x00000001000b4050     sp = 0x000000016fd69770  
AddressSanitizer can not provide additional info.
SUMMARY: AddressSanitizer: SEGV Image.cpp:30 in prog::Image::height() const
==18897==ABORTING
>>>> [59] xpm2_open3 <<<<
Executing command 'xpm2_open' ...
Executing command 'input/tetris.xpm' ...
Executing command 'save' ...
PNG.cpp:31:24: runtime error: member call on null pointer of type 'prog::Image'
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior PNG.cpp:31:24 in 
Image.cpp:28:14: runtime error: member call on null pointer of type 'const prog::Image *'
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior Image.cpp:28:14 in 
AddressSanitizer:DEADLYSIGNAL
=================================================================
==18900==ERROR: AddressSanitizer: SEGV on unknown address 0x00000000000c (pc 0x0001000b40a8 bp 0x00016fd697b0 sp 0x00016fd69770 T0)
==18900==The signal is caused by a UNKNOWN memory access.
==18900==Hint: address points to the zero page.
    #0 0x1000b40a8 in prog::Image::height() const Image.cpp:30
    #1 0x1000fc188 in prog::saveToPNG(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, prog::Image const*) PNG.cpp:31
    #2 0x1000bbbcc in prog::Script::save() Script.cpp:145
    #3 0x1000b7168 in prog::Script::run() Script.cpp:64
    #4 0x1000b184c in prog::TestDriver::test_script(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) test.cpp:43
    #5 0x1000a12e8 in prog::TestDriver::run_test(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) test.cpp:79
    #6 0x100098ba4 in prog::TestDriver::test_scripts(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) test.cpp:165
    #7 0x100096fdc in main test.cpp:186
    #8 0x19371be4c  (<unknown module>)

==18900==Register values:
 x[0] = 0x000000016fd69688   x[1] = 0x0000000000000000   x[2] = 0x0000000000000000   x[3] = 0x0000000101d003c0  
 x[4] = 0x0000000063000000   x[5] = 0x0000000000000000   x[6] = 0x0000000000000000   x[7] = 0x0000000000000000  
 x[8] = 0x0000000000000000   x[9] = 0x000000000000000c  x[10] = 0x0000000000092220  x[11] = 0x000000000000001d  
x[12] = 0x00000001002fc000  x[13] = 0xffffff0000000000  x[14] = 0x0000000000000000  x[15] = 0x0000000000000000  
x[16] = 0x0000000300e53400  x[17] = 0x000000010060c0a8  x[18] = 0x0000000000000000  x[19] = 0x000000016fd69800  
x[20] = 0x0000000100096af4  x[21] = 0x00000001001cdca0  x[22] = 0x000000016fd6b7d0  x[23] = 0x0000000193791000  
x[24] = 0x00000001ef6183c0  x[25] = 0x0000000000000000  x[26] = 0x0000000000000000  x[27] = 0x0000000000000000  
x[28] = 0x0000000000000000     fp = 0x000000016fd697b0     lr = 0x00000001000b4050     sp = 0x000000016fd69770  
AddressSanitizer can not provide additional info.
SUMMARY: AddressSanitizer: SEGV Image.cpp:30 in prog::Image::height() const
==18900==ABORTING
>>>> [60] xpm2_open4 <<<<
Executing command 'xpm2_open' ...
Executing command 'input/mondrian.xpm' ...
Executing command 'save' ...
PNG.cpp:31:24: runtime error: member call on null pointer of type 'prog::Image'
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior PNG.cpp:31:24 in 
Image.cpp:28:14: runtime error: member call on null pointer of type 'const prog::Image *'
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior Image.cpp:28:14 in 
AddressSanitizer:DEADLYSIGNAL
=================================================================
==18903==ERROR: AddressSanitizer: SEGV on unknown address 0x00000000000c (pc 0x0001000b40a8 bp 0x00016fd697b0 sp 0x00016fd69770 T0)
==18903==The signal is caused by a UNKNOWN memory access.
==18903==Hint: address points to the zero page.
    #0 0x1000b40a8 in prog::Image::height() const Image.cpp:30
    #1 0x1000fc188 in prog::saveToPNG(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, prog::Image const*) PNG.cpp:31
    #2 0x1000bbbcc in prog::Script::save() Script.cpp:145
    #3 0x1000b7168 in prog::Script::run() Script.cpp:64
    #4 0x1000b184c in prog::TestDriver::test_script(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) test.cpp:43
    #5 0x1000a12e8 in prog::TestDriver::run_test(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) test.cpp:79
    #6 0x100098ba4 in prog::TestDriver::test_scripts(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) test.cpp:165
    #7 0x100096fdc in main test.cpp:186
    #8 0x19371be4c  (<unknown module>)

==18903==Register values:
 x[0] = 0x000000016fd69688   x[1] = 0x0000000000000000   x[2] = 0x0000000000000000   x[3] = 0x0000000101d003c0  
 x[4] = 0x0000000063000000   x[5] = 0x0000000000000000   x[6] = 0x0000000000000000   x[7] = 0x0000000000000000  
 x[8] = 0x0000000000000000   x[9] = 0x000000000000000c  x[10] = 0x0000000000092220  x[11] = 0x000000000000001d  
x[12] = 0x00000001002fc000  x[13] = 0xffffff0000000000  x[14] = 0x0000000000000000  x[15] = 0x0000000000000000  
x[16] = 0x0000000300e53400  x[17] = 0x000000010060c0a8  x[18] = 0x0000000000000000  x[19] = 0x000000016fd69800  
x[20] = 0x0000000100096af4  x[21] = 0x00000001001cdca0  x[22] = 0x000000016fd6b7d0  x[23] = 0x0000000193791000  
x[24] = 0x00000001ef6183c0  x[25] = 0x0000000000000000  x[26] = 0x0000000000000000  x[27] = 0x0000000000000000  
x[28] = 0x0000000000000000     fp = 0x000000016fd697b0     lr = 0x00000001000b4050     sp = 0x000000016fd69770  
AddressSanitizer can not provide additional info.
SUMMARY: AddressSanitizer: SEGV Image.cpp:30 in prog::Image::height() const
==18903==ABORTING
>>>> [61] xpm2_open5 <<<<
Executing command 'xpm2_open' ...
Executing command 'input/lion.xpm' ...
Executing command 'save' ...
PNG.cpp:31:24: runtime error: member call on null pointer of type 'prog::Image'
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior PNG.cpp:31:24 in 
Image.cpp:28:14: runtime error: member call on null pointer of type 'const prog::Image *'
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior Image.cpp:28:14 in 
AddressSanitizer:DEADLYSIGNAL
=================================================================
==18906==ERROR: AddressSanitizer: SEGV on unknown address 0x00000000000c (pc 0x0001000b40a8 bp 0x00016fd697b0 sp 0x00016fd69770 T0)
==18906==The signal is caused by a UNKNOWN memory access.
==18906==Hint: address points to the zero page.
    #0 0x1000b40a8 in prog::Image::height() const Image.cpp:30
    #1 0x1000fc188 in prog::saveToPNG(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, prog::Image const*) PNG.cpp:31
    #2 0x1000bbbcc in prog::Script::save() Script.cpp:145
    #3 0x1000b7168 in prog::Script::run() Script.cpp:64
    #4 0x1000b184c in prog::TestDriver::test_script(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) test.cpp:43
    #5 0x1000a12e8 in prog::TestDriver::run_test(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) test.cpp:79
    #6 0x100098ba4 in prog::TestDriver::test_scripts(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) test.cpp:165
    #7 0x100096fdc in main test.cpp:186
    #8 0x19371be4c  (<unknown module>)

==18906==Register values:
 x[0] = 0x000000016fd69688   x[1] = 0x0000000000000000   x[2] = 0x0000000000000000   x[3] = 0x0000000101d003c0  
 x[4] = 0x0000000063000000   x[5] = 0x0000000000000000   x[6] = 0x0000000000000000   x[7] = 0x0000000000000000  
 x[8] = 0x0000000000000000   x[9] = 0x000000000000000c  x[10] = 0x0000000000092220  x[11] = 0x000000000000001d  
x[12] = 0x00000001002fc000  x[13] = 0xffffff0000000000  x[14] = 0x0000000000000000  x[15] = 0x0000000000000000  
x[16] = 0x0000000300e53400  x[17] = 0x000000010060c0a8  x[18] = 0x0000000000000000  x[19] = 0x000000016fd69800  
x[20] = 0x0000000100096af4  x[21] = 0x00000001001cdca0  x[22] = 0x000000016fd6b7d0  x[23] = 0x0000000193791000  
x[24] = 0x00000001ef6183c0  x[25] = 0x0000000000000000  x[26] = 0x0000000000000000  x[27] = 0x0000000000000000  
x[28] = 0x0000000000000000     fp = 0x000000016fd697b0     lr = 0x00000001000b4050     sp = 0x000000016fd69770  
AddressSanitizer can not provide additional info.
SUMMARY: AddressSanitizer: SEGV Image.cpp:30 in prog::Image::height() const
==18906==ABORTING
>>>> [62] xpm2_save1 <<<<
Executing command 'open' ...
Executing command 'xpm2_save' ...
Executing command 'output/xpm2_save1.xpm' ...
Executing command 'blank' ...
Executing command 'xpm2_open' ...
Executing command 'output/xpm2_save1.xpm' ...
Executing command 'save' ...
Images have different dimensions: 16x7 != 1x1
>>>> [63] xpm2_save2 <<<<
Executing command 'open' ...
Executing command 'xpm2_save' ...
Executing command 'output/xpm2_save2.xpm' ...
Executing command 'blank' ...
Executing command 'xpm2_open' ...
Executing command 'output/xpm2_save2.xpm' ...
Executing command 'save' ...
Images have different dimensions: 150x150 != 1x1
>>>> [64] xpm2_save3 <<<<
Executing command 'open' ...
Executing command 'xpm2_save' ...
Executing command 'output/xpm2_save3.xpm' ...
Executing command 'blank' ...
Executing command 'xpm2_open' ...
Executing command 'output/xpm2_save3.xpm' ...
Executing command 'save' ...
Images have different dimensions: 300x300 != 1x1
>>>> [65] xpm2_save4 <<<<
Executing command 'open' ...
Executing command 'xpm2_save' ...
Executing command 'output/xpm2_save4.xpm' ...
Executing command 'blank' ...
Executing command 'xpm2_open' ...
Executing command 'output/xpm2_save4.xpm' ...
Executing command 'save' ...
Images have different dimensions: 270x480 != 1x1
>>>> [66] xpm2_save5 <<<<
Executing command 'open' ...
Executing command 'xpm2_save' ...
Executing command 'output/xpm2_save5.xpm' ...
Executing command 'blank' ...
Executing command 'xpm2_open' ...
Executing command 'output/xpm2_save5.xpm' ...
Executing command 'save' ...
Images have different dimensions: 250x380 != 1x1
